name: Deploy Astro to GitHub Pages

on:
  push:
    branches: [ main ]   # <–– cámbialo si tu rama es otra
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Puedes definirlos como Secrets (recommended) o Repository Variables (vars). Claves Firebase públicas pueden ir en vars.
      PUBLIC_FIREBASE_API_KEY: ${{ secrets.PUBLIC_FIREBASE_API_KEY || vars.PUBLIC_FIREBASE_API_KEY }}
      PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.PUBLIC_FIREBASE_AUTH_DOMAIN || vars.PUBLIC_FIREBASE_AUTH_DOMAIN }}
      PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.PUBLIC_FIREBASE_PROJECT_ID || vars.PUBLIC_FIREBASE_PROJECT_ID }}
      PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.PUBLIC_FIREBASE_STORAGE_BUCKET || vars.PUBLIC_FIREBASE_STORAGE_BUCKET }}
      PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.PUBLIC_FIREBASE_MESSAGING_SENDER_ID || vars.PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      PUBLIC_FIREBASE_APP_ID: ${{ secrets.PUBLIC_FIREBASE_APP_ID || vars.PUBLIC_FIREBASE_APP_ID }}
      PUBLIC_FIREBASE_APPCHECK_KEY: ${{ secrets.PUBLIC_FIREBASE_APPCHECK_KEY || vars.PUBLIC_FIREBASE_APPCHECK_KEY }}
      PUBLIC_WEB3FORMS_ACCESS_KEY: ${{ secrets.PUBLIC_WEB3FORMS_ACCESS_KEY || vars.PUBLIC_WEB3FORMS_ACCESS_KEY }}
      PUBLIC_LIKES_ENABLED: ${{ secrets.PUBLIC_LIKES_ENABLED || vars.PUBLIC_LIKES_ENABLED || '1' }}
      PUBLIC_LIKES_REALTIME: ${{ secrets.PUBLIC_LIKES_REALTIME || vars.PUBLIC_LIKES_REALTIME || '1' }}
      PUBLIC_LIKES_DEBUG: ${{ secrets.PUBLIC_LIKES_DEBUG || vars.PUBLIC_LIKES_DEBUG || '0' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - uses: actions/configure-pages@v5     # <–– paso recomendado por GitHub
      - name: Validate public env vars
        run: |
          echo "Mostrando variables PUBLIC_* detectadas:" 
          env | grep '^PUBLIC_' || true
          REQUIRED=( \
            PUBLIC_FIREBASE_API_KEY \
            PUBLIC_FIREBASE_AUTH_DOMAIN \
            PUBLIC_FIREBASE_PROJECT_ID \
            PUBLIC_FIREBASE_STORAGE_BUCKET \
            PUBLIC_FIREBASE_MESSAGING_SENDER_ID \
            PUBLIC_FIREBASE_APP_ID \
            PUBLIC_WEB3FORMS_ACCESS_KEY \
          )
          MISSING=0
          for v in "${REQUIRED[@]}"; do
            val="${!v}"
            if [ -z "$val" ]; then
              echo "[ERROR] Falta o vacío: $v" >&2
              MISSING=1
            fi
          done
          if [ $MISSING -eq 1 ]; then
            echo "Abortando build: define cada variable como Secret (secrets.PUBLIC_* ) o Variable (vars.PUBLIC_*)." >&2
            exit 1
          fi
          echo "Validación OK: variables públicas presentes."
      - run: npm ci
      - run: npm run build
      - run: touch dist/.nojekyll            # evita bloqueo de /_astro
      - uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages                     # opcional (puedes quitar este bloque si molesta el editor)
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
