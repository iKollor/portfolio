name: Deploy Astro to GitHub Pages

on:
  push:
    branches: [ main ]   # <–– cámbialo si tu rama es otra
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - uses: actions/configure-pages@v5     # <–– paso recomendado por GitHub
      - name: Load public env vars (multiline secret)
        run: |
          # Crea un secret en GitHub llamado PUBLIC_ENV_VARS con el contenido de tus variables PUBLIC_*
          # Ejemplo del contenido del secret:
          # PUBLIC_FIREBASE_API_KEY=xxx
          # PUBLIC_FIREBASE_AUTH_DOMAIN=xxx.firebaseapp.com
          # PUBLIC_FIREBASE_PROJECT_ID=xxx
          # PUBLIC_FIREBASE_STORAGE_BUCKET=xxx.appspot.com
          # PUBLIC_FIREBASE_MESSAGING_SENDER_ID=123456789
          # PUBLIC_FIREBASE_APP_ID=1:123:web:abc
          # PUBLIC_FIREBASE_APPCHECK_KEY=tu_site_key
          # PUBLIC_WEB3FORMS_ACCESS_KEY=xxxxx
          # PUBLIC_LIKES_ENABLED=1
          # PUBLIC_LIKES_REALTIME=1
          # PUBLIC_LIKES_DEBUG=0
          echo "${{ secrets.PUBLIC_ENV_VARS }}" >> $GITHUB_ENV
          echo "Variables PUBLIC_* cargadas:" && grep '^PUBLIC_' $GITHUB_ENV || true
      - name: Validate public env vars
        run: |
          REQUIRED=( \
            PUBLIC_FIREBASE_API_KEY \
            PUBLIC_FIREBASE_AUTH_DOMAIN \
            PUBLIC_FIREBASE_PROJECT_ID \
            PUBLIC_FIREBASE_STORAGE_BUCKET \
            PUBLIC_FIREBASE_MESSAGING_SENDER_ID \
            PUBLIC_FIREBASE_APP_ID \
            PUBLIC_WEB3FORMS_ACCESS_KEY \
          )
          MISSING=0
          for v in "${REQUIRED[@]}"; do
            if ! grep -q "^$v=" "$GITHUB_ENV"; then
              echo "[ERROR] Falta $v (no cargado del secret PUBLIC_ENV_VARS)" >&2
              MISSING=1
            else
              if grep -q "^$v=$" "$GITHUB_ENV"; then
                echo "[ERROR] Valor vacío para $v (línea presente pero sin contenido)." >&2
                MISSING=1
              fi
            fi
          done
          if [ $MISSING -eq 1 ]; then
            echo "Contenido actual de $GITHUB_ENV:" >&2
            sed -n '1,120p' "$GITHUB_ENV" >&2 || true
            echo "Abortando build: agrega las variables al secret PUBLIC_ENV_VARS (multiline)." >&2
            exit 1
          fi
          echo "Validación OK: variables públicas presentes."
      - run: npm ci
      - run: npm run build
      - run: touch dist/.nojekyll            # evita bloqueo de /_astro
      - uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages                     # opcional (puedes quitar este bloque si molesta el editor)
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
